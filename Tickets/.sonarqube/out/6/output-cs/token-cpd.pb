×
HC:\Fac\SysopSquadTickets\Tickets\WebApi\Controllers\BaseApiController.cs
	namespace 	
WebApi
 
. 
Controllers 
. 
v1 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 3
)3 4
]4 5
public		 

class		 
BaseApiController		 "
:		# $
ControllerBase		% 3
{

 
	protected 
	IMediator 
Mediator $
;$ %
public 
BaseApiController  
(  !
	IMediator! *
mediator+ 3
)3 4
{ 	
this 
. 
Mediator 
= 
mediator $
;$ %
} 	
} 
} ±c
JC:\Fac\SysopSquadTickets\Tickets\WebApi\Controllers\v1\TicketController.cs
	namespace 	
WebApi
 
. 
Controllers 
. 
v1 
{ 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
TicketController !
:" #
BaseApiController$ 5
{ 
public 
TicketController 
(  
	IMediator  )
mediator* 2
)2 3
:4 5
base6 :
(: ;
mediator; C
)C D
{E F
}G H
[ 	
HttpGet	 
] 
[ 	 
ProducesResponseType	 
( 
StatusCodes )
.) *
Status200OK* 5
)5 6
]6 7
[ 	
AllowAnonymous	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetAll) /
(/ 0
)0 1
{ 	
return 
Ok 
( 
await 
Mediator $
.$ %
Send% )
() *
new* -
GetAllTicketsQuery. @
(@ A
)A B
)B C
)C D
;D E
} 	
[!! 	
HttpGet!!	 
(!! 
$str!! "
)!!" #
]!!# $
["" 	 
ProducesResponseType""	 
("" 
StatusCodes"" )
."") *
Status200OK""* 5
)""5 6
]""6 7
[## 	
AllowAnonymous##	 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
IActionResult$$ '
>$$' (
GetById$$) 0
($$0 1
string$$1 7
id$$8 :
)$$: ;
{%% 	
try&& 
{&& 
return'' 
Ok'' 
('' 
await'' 
Mediator''  (
.''( )
Send'') -
(''- .
new''. 1
GetTicketByIdQuery''2 D
(''D E
id''E G
)''G H
)''H I
)''I J
;''J K
}(( 
catch)) 
()) 
	Exception)) 
ex)) 
)))  
{** 
return++ 

BadRequest++ !
(++! "
new++" %
{++& '
error++( -
=++. /
ex++0 2
.++2 3
Message++3 :
}++; <
)++< =
;++= >
},, 
}-- 	
[// 	
HttpGet//	 
(// 
$str// )
)//) *
]//* +
[00 	 
ProducesResponseType00	 
(00 
StatusCodes00 )
.00) *
Status200OK00* 5
)005 6
]006 7
[11 	
AllowAnonymous11	 
]11 
public22 
async22 
Task22 
<22 
IActionResult22 '
>22' (
GetAllByUserId22) 7
(227 8
string228 >
id22? A
)22A B
{33 	
try44 
{55 
return66 
Ok66 
(66 
await66 
Mediator66  (
.66( )
Send66) -
(66- .
new66. 1&
GetAllTicketsByUserIdQuery662 L
(66L M
id66M O
)66O P
)66P Q
)66Q R
;66R S
}77 
catch88 
(88 
	Exception88 
ex88 
)88  
{99 
return:: 

BadRequest:: !
(::! "
new::" %
{::& '
error::( -
=::. /
ex::0 2
.::2 3
Message::3 :
}::; <
)::< =
;::= >
};; 
}<< 	
[>> 	
HttpGet>>	 
(>> 
$str>> /
)>>/ 0
]>>0 1
[?? 	 
ProducesResponseType??	 
(?? 
StatusCodes?? )
.??) *
Status200OK??* 5
)??5 6
]??6 7
[@@ 	
AllowAnonymous@@	 
]@@ 
publicAA 
asyncAA 
TaskAA 
<AA 
IActionResultAA '
>AA' ( 
GetAllByConsultantIdAA) =
(AA= >
stringAA> D
idAAE G
)AAG H
{BB 	
tryCC 
{DD 
returnEE 
OkEE 
(EE 
awaitEE 
MediatorEE  (
.EE( )
SendEE) -
(EE- .
newEE. 1,
 GetAllTicketsByConsultantIdQueryEE2 R
(EER S
idEES U
)EEU V
)EEV W
)EEW X
;EEX Y
}FF 
catchGG 
(GG 
	ExceptionGG 
exGG 
)GG  
{HH 
returnII 

BadRequestII !
(II! "
newII" %
{II& '
errorII( -
=II. /
exII0 2
.II2 3
MessageII3 :
}II; <
)II< =
;II= >
}JJ 
}KK 	
[MM 	
HttpGetMM	 
(MM 
$strMM "
)MM" #
]MM# $
[NN 	 
ProducesResponseTypeNN	 
(NN 
StatusCodesNN )
.NN) *
Status200OKNN* 5
)NN5 6
]NN6 7
[OO 	
AllowAnonymousOO	 
]OO 
publicPP 
asyncPP 
TaskPP 
<PP 
IActionResultPP '
>PP' (!
GetAllTicketsByStatusPP) >
(PP> ?
stringPP? E
statusPPF L
)PPL M
{QQ 	
tryRR 
{SS 
returnTT 
OkTT 
(TT 
awaitTT 
MediatorTT  (
.TT( )
SendTT) -
(TT- .
newTT. 1&
GetAllTicketsByStatusQueryTT2 L
(TTL M
statusTTM S
)TTS T
)TTT U
)TTU V
;TTV W
}UU 
catchVV 
(VV 
	ExceptionVV 
exVV 
)VV  
{WW 
returnXX 

BadRequestXX !
(XX! "
newXX" %
{XX& '
errorXX( -
=XX. /
exXX0 2
.XX2 3
MessageXX3 :
}XX; <
)XX< =
;XX= >
}YY 
}ZZ 	
[\\ 	
HttpGet\\	 
(\\ 
$str\\ 
)\\ 
]\\ 
[]] 	 
ProducesResponseType]]	 
(]] 
StatusCodes]] )
.]]) *
Status200OK]]* 5
)]]5 6
]]]6 7
[^^ 	
AllowAnonymous^^	 
]^^ 
public__ 
async__ 
Task__ 
<__ 
IActionResult__ '
>__' (,
 GetTicketByUserIdAndConsultantId__) I
(__I J1
%GetTicketByUserIdAndConsultantIdQuery__J o
query__p u
)__u v
{`` 	
tryaa 
{bb 
returncc 
Okcc 
(cc 
awaitcc 
Mediatorcc  (
.cc( )
Sendcc) -
(cc- .
querycc. 3
)cc3 4
)cc4 5
;cc5 6
}dd 
catchee 
(ee 
	Exceptionee 
exee 
)ee  
{ff 
returngg 

BadRequestgg !
(gg! "
newgg" %
{gg& '
errorgg( -
=gg. /
exgg0 2
.gg2 3
Messagegg3 :
}gg; <
)gg< =
;gg= >
}hh 
}ii 	
[kk 	
HttpPostkk	 
(kk 
$strkk 
)kk 
]kk 
[ll 	 
ProducesResponseTypell	 
(ll 
StatusCodesll )
.ll) *
Status200OKll* 5
)ll5 6
]ll6 7
[mm 	 
ProducesResponseTypemm	 
(mm 
StatusCodesmm )
.mm) *
Status400BadRequestmm* =
)mm= >
]mm> ?
[nn 	
AllowAnonymousnn	 
]nn 
publicoo 
asyncoo 
Taskoo 
<oo 
IActionResultoo '
>oo' (
Createoo) /
(oo/ 0
[oo0 1
FromBodyoo1 9
]oo9 :
CreateTicketCommandoo; N
commandooO V
)ooV W
{pp 	
varqq 
ticketqq 
=qq 
awaitqq 
Mediatorqq '
.qq' (
Sendqq( ,
(qq, -
commandqq- 4
)qq4 5
;qq5 6
ifss 
(ss 
ticketss 
==ss 
nullss 
)ss 
returntt 

BadRequesttt !
(tt! "
)tt" #
;tt# $
returnvv 
Okvv 
(vv 
ticketvv 
)vv 
;vv 
}ww 	
[yy 	
	HttpPatchyy	 
(yy 
$stryy +
)yy+ ,
]yy, -
[zz 	 
ProducesResponseTypezz	 
(zz 
StatusCodeszz )
.zz) *
Status204NoContentzz* <
)zz< =
]zz= >
[{{ 	 
ProducesResponseType{{	 
({{ 
StatusCodes{{ )
.{{) *
Status404NotFound{{* ;
){{; <
]{{< =
[|| 	
AllowAnonymous||	 
]|| 
public}} 
async}} 
Task}} 
<}} 
IActionResult}} '
>}}' (
Update}}) /
(}}/ 0#
UpdateTicketByIdCommand}}0 G
command}}H O
)}}O P
{~~ 	
var 
ticket 
= 
await 
Mediator '
.' (
Send( ,
(, -
command- 4
)4 5
;5 6
if
 
(
 
ticket
 
==
 
null
 
)
 
return
 
NotFound
 
(
  
)
  !
;
! "
return
 
	NoContent
 
(
 
)
 
;
 
}
 	
[
 	
	HttpPatch
	 
(
 
$str
 "
)
" #
]
# $
[
 	"
ProducesResponseType
	 
(
 
StatusCodes
 )
.
) * 
Status204NoContent
* <
)
< =
]
= >
[
 	"
ProducesResponseType
	 
(
 
StatusCodes
 )
.
) *
Status404NotFound
* ;
)
; <
]
< =
[
 	
AllowAnonymous
	 
]
 
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (
UpdateStatus
) 5
(
5 6+
UpdateStatusTicketByIdCommand
6 S
command
T [
)
[ \
{
 	
var
 
ticket
 
=
 
await
 
Mediator
 '
.
' (
Send
( ,
(
, -
command
- 4
)
4 5
;
5 6
if
 
(
 
ticket
 
==
 
null
 
)
 
return
 
NotFound
 
(
  
)
  !
;
! "
return
 
	NoContent
 
(
 
)
 
;
 
}
 	
[
 	

HttpDelete
	 
(
 
$str
 %
)
% &
]
& '
[
 	"
ProducesResponseType
	 
(
 
StatusCodes
 )
.
) * 
Status204NoContent
* <
)
< =
]
= >
[
 	"
ProducesResponseType
	 
(
 
StatusCodes
 )
.
) *
Status404NotFound
* ;
)
; <
]
< =
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (
Delete
) /
(
/ 0
string
0 6
id
7 9
)
9 :
{
 	
var
 
deleted
 
=
 
await
 
Mediator
  (
.
( )
Send
) -
(
- .
new
. 1%
DeleteTicketByIdCommand
2 I
(
I J
id
J L
)
L M
)
M N
;
N O
if
 
(
 
deleted
 
)
 
return
 
	NoContent
  
(
  !
)
! "
;
" #
return
 
NotFound
 
(
 
)
 
;
 
}
   	
}
¡¡ 
}¢¢ 

2C:\Fac\SysopSquadTickets\Tickets\WebApi\Program.cs
	namespace 	
WebApi
 
{ 
public 

static 
class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{		 	
CreateHostBuilder

 
(

 
args

 "
)

" #
.

# $
Build

$ )
(

) *
)

* +
.

+ ,
Run

, /
(

/ 0
)

0 1
;

1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ö4
2C:\Fac\SysopSquadTickets\Tickets\WebApi\Startup.cs
	namespace 	
WebApi
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddApiVersioning %
(% &
config& ,
=>- /
{ 
config 
. 
DefaultApiVersion (
=) *
new+ .

ApiVersion/ 9
(9 :
$num: ;
,; <
$num= >
)> ?
;? @
config 
. /
#AssumeDefaultVersionWhenUnspecified :
=; <
true= A
;A B
config 
. 
ReportApiVersions (
=) *
true+ /
;/ 0
}   
)   
;   
services"" 
."" 
AddCors"" 
("" 
("" 
options"" %
)""% &
=>""' )
{## 
options$$ 
.$$ 
	AddPolicy$$ !
($$! "
$str$$" ,
,$$, -
builder$$. 5
=>$$6 8
builder$$9 @
.$$@ A
AllowAnyOrigin$$A O
($$O P
)$$P Q
.$$Q R
AllowAnyMethod$$R `
($$` a
)$$a b
.$$b c
AllowAnyHeader$$c q
($$q r
)$$r s
.$$s t
AllowCredentials	$$t 
(
$$ 
)
$$ 
)
$$ 
;
$$ 
}%% 
)%% 
;%% 
services'' 
.'' 
AddMvc'' 
('' 
option'' "
=>''# %
option''& ,
.'', -!
EnableEndpointRouting''- B
=''C D
false''E J
)''J K
;''K L
services)) 
.)) 
AddApplication)) #
())# $
)))$ %
;))% &
services** 
.** 
AddPersistence** #
(**# $
Configuration**$ 1
)**1 2
;**2 3
services,, 
.,, 
AddControllers,, #
(,,# $
),,$ %
.-- 
AddFluentValidation-- (
(--( )
s--) *
=>--+ -
{.. 
s// 
.// 4
(RegisterValidatorsFromAssemblyContaining// B
<//B C
Startup//C J
>//J K
(//K L
)//L M
;//M N
s00 
.00 @
4RunDefaultMvcValidationAfterFluentValidationExecutes00 N
=00O P
false00Q V
;00V W
}11 
)11 
;11 
services33 
.33 
AddSwaggerGen33 "
(33" #
c33# $
=>33% '
{44 
c55 
.55 

SwaggerDoc55 
(55 
$str55 !
,55! "
new55# &
OpenApiInfo55' 2
{553 4
Title555 :
=55; <
$str55= E
,55E F
Version55G N
=55O P
$str55Q U
}55V W
)55W X
;55X Y
c77 
.77 !
AddSecurityDefinition77 '
(77' (
$str77( 0
,770 1
new772 5!
OpenApiSecurityScheme776 K
{88 
Type99 
=99 
SecuritySchemeType99 -
.99- .
Http99. 2
,992 3
BearerFormat::  
=::! "
$str::# (
,::( )
In;; 
=;; 
ParameterLocation;; *
.;;* +
Header;;+ 1
,;;1 2
Scheme<< 
=<< 
$str<< %
,<<% &
Description== 
===  !
$str==" F
}>> 
)>> 
;>> 
c@@ 
.@@ "
AddSecurityRequirement@@ (
(@@( )
new@@) ,&
OpenApiSecurityRequirement@@- G
{AA 
{BB 
newCC !
OpenApiSecuritySchemeCC 1
{DD 
	ReferenceEE %
=EE& '
newEE( +
OpenApiReferenceEE, <
{FF 
TypeGG  $
=GG% &
ReferenceTypeGG' 4
.GG4 5
SecuritySchemeGG5 C
,GGC D
IdHH  "
=HH# $
$strHH% -
}II 
}JJ 
,JJ 
ArrayKK 
.KK 
EmptyKK #
<KK# $
stringKK$ *
>KK* +
(KK+ ,
)KK, -
}LL 
}MM 
)MM 
;MM 
}NN 
)NN 
;NN 
}OO 	
publicRR 
voidRR 
	ConfigureRR 
(RR 
IApplicationBuilderRR 1
appRR2 5
,RR5 6
IWebHostEnvironmentRR7 J
envRRK N
)RRN O
{SS 	
ifTT 
(TT 
envTT 
.TT 
IsDevelopmentTT !
(TT! "
)TT" #
)TT# $
{UU 
appVV 
.VV %
UseDeveloperExceptionPageVV -
(VV- .
)VV. /
;VV/ 0
appWW 
.WW 

UseSwaggerWW 
(WW 
)WW  
;WW  !
appXX 
.XX 
UseSwaggerUIXX  
(XX  !
cXX! "
=>XX# %
cXX& '
.XX' (
SwaggerEndpointXX( 7
(XX7 8
$strXX8 R
,XXR S
$strXXT _
)XX_ `
)XX` a
;XXa b
}YY 
app[[ 
.[[ 
UseHttpsRedirection[[ #
([[# $
)[[$ %
;[[% &
app]] 
.]] 

UseRouting]] 
(]] 
)]] 
;]] 
app^^ 
.^^ 
UseCors^^ 
(^^ 
$str^^ "
)^^" #
;^^# $
app`` 
.`` 
UseAuthentication`` !
(``! "
)``" #
;``# $
appaa 
.aa 
UseAuthorizationaa  
(aa  !
)aa! "
;aa" #
appbb 
.bb 
UseEndpointsbb 
(bb 
	endpointsbb &
=>bb' )
{cc 
	endpointsdd 
.dd 
MapControllersdd (
(dd( )
)dd) *
;dd* +
}ee 
)ee 
;ee 
}ff 	
}gg 
}hh (
RC:\Fac\SysopSquadTickets\Tickets\WebApi\Validators\CreateTicketCommandValidator.cs
	namespace 	
WebApi
 
. 

Validators 
{ 
public 

class (
CreateTicketCommandValidator -
:. /
AbstractValidator0 A
<A B
CreateTicketCommandB U
>U V
{ 
private 
enum 
Category 
{		 	
Software

 
,

 
Hardware

 
,

 
Hr

  "
} 	
;	 

private 
enum 
Priority 
{ 	
High 
, 
Medium 
, 
Low 
} 	
;	 

public (
CreateTicketCommandValidator +
(+ ,
), -
{ 	
const 
string 
idRegex  
=! "
$str# 3
;3 4
RuleFor 
( 
ticket 
=> 
ticket $
.$ %
UserId% +
)+ ,
. 
Cascade 
( 
CascadeMode $
.$ %
Stop% )
)) *
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
ValidationErrors( 8
.8 9
EmptyUserId9 D
)D E
. 
Length 
( 
$num 
) 
. 
WithMessage '
(' (
ValidationErrors( 8
.8 9
InvalidIdLength9 H
)H I
. 
Matches 
( 
idRegex  
)  !
.! "
WithMessage" -
(- .
ValidationErrors. >
.> ?
InvalidIdStructure? Q
)Q R
;R S
RuleFor 
( 
ticket 
=> 
ticket $
.$ %
Title% *
)* +
. 
Cascade 
( 
CascadeMode $
.$ %
Stop% )
)) *
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
ValidationErrors( 8
.8 9

EmptyTitle9 C
)C D
. 
MinimumLength 
( 
$num  
)  !
.! "
WithMessage" -
(- .
ValidationErrors. >
.> ?

ShortTitle? I
)I J
;J K
RuleFor!! 
(!! 
ticket!! 
=>!! 
ticket!! $
.!!$ %
Description!!% 0
)!!0 1
."" 
Cascade"" 
("" 
CascadeMode"" $
.""$ %
Stop""% )
)"") *
.## 
NotEmpty## 
(## 
)## 
.## 
WithMessage## '
(##' (
ValidationErrors##( 8
.##8 9
EmptyDescription##9 I
)##I J
.$$ 
MinimumLength$$ 
($$ 
$num$$  
)$$  !
.$$! "
WithMessage$$" -
($$- .
ValidationErrors$$. >
.$$> ?
ShortDescription$$? O
)$$O P
;$$P Q
RuleFor&& 
(&& 
ticket&& 
=>&& 
ticket&& $
.&&$ %
Category&&% -
)&&- .
.'' 
Cascade'' 
('' 
CascadeMode'' (
.''( )
Stop'') -
)''- .
.(( 
NotEmpty(( 
((( 
)(( 
.((  
WithMessage((  +
(((+ ,
ValidationErrors((, <
.((< =
EmptyCategory((= J
)((J K
.)) 

IsEnumName)) 
())  
typeof))  &
())& '
Category))' /
)))/ 0
,))0 1
caseSensitive))2 ?
:))? @
false))A F
)))F G
.))G H
WithMessage))H S
())S T
ValidationErrors))T d
.))d e
InvalidCategory))e t
)))t u
;))u v
RuleFor++ 
(++ 
ticket++ 
=>++ 
ticket++ $
.++$ %
Priority++% -
)++- .
.,, 
Cascade,, 
(,, 
CascadeMode,, (
.,,( )
Stop,,) -
),,- .
.-- 
NotEmpty-- 
(-- 
)-- 
.--  
WithMessage--  +
(--+ ,
ValidationErrors--, <
.--< =
EmptyPriority--= J
)--J K
... 

IsEnumName.. 
(..  
typeof..  &
(..& '
Priority..' /
)../ 0
,..0 1
caseSensitive..2 ?
:..? @
false..A F
)..F G
...G H
WithMessage..H S
(..S T
ValidationErrors..T d
...d e
InvalidPriority..e t
)..t u
;..u v
}// 	
}00 
}11 ¾
dC:\Fac\SysopSquadTickets\Tickets\WebApi\Validators\GetTicketByUserIdAndConsultantIdQueryValidator.cs
	namespace 	
WebApi
 
. 

Validators 
{ 
public 

class :
.GetTicketByUserIdAndConsultantIdQueryValidator ?
:@ A
AbstractValidatorB S
<S T1
%GetTicketByUserIdAndConsultantIdQueryT y
>y z
{ 
public :
.GetTicketByUserIdAndConsultantIdQueryValidator =
(= >
)> ?
{		 	
const

 
string

 
idRegex

  
=

! "
$str

# 3
;

3 4
RuleFor 
( 
ticket 
=> 
ticket $
.$ %
UserId% +
)+ ,
. 
Cascade 
( 
CascadeMode $
.$ %
Stop% )
)) *
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
ValidationErrors( 8
.8 9
EmptyUserId9 D
)D E
. 
Length 
( 
$num 
) 
. 
WithMessage '
(' (
ValidationErrors( 8
.8 9
InvalidIdLength9 H
)H I
. 
Matches 
( 
idRegex  
)  !
.! "
WithMessage" -
(- .
ValidationErrors. >
.> ?
InvalidIdStructure? Q
)Q R
;R S
RuleFor 
( 
ticket 
=> 
ticket $
.$ %
ConsultantId% 1
)1 2
. 
Cascade 
( 
CascadeMode $
.$ %
Stop% )
)) *
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
ValidationErrors( 8
.8 9
EmptyConsultantId9 J
)J K
. 
Length 
( 
$num 
) 
. 
WithMessage '
(' (
ValidationErrors( 8
.8 9
InvalidIdLength9 H
)H I
. 
Matches 
( 
idRegex  
)  !
.! "
WithMessage" -
(- .
ValidationErrors. >
.> ?
InvalidIdStructure? Q
)Q R
;R S
} 	
} 
} ò
\C:\Fac\SysopSquadTickets\Tickets\WebApi\Validators\UpdateStatusTicketByIdCommandValidator.cs
	namespace 	
WebApi
 
. 

Validators 
{ 
public 

class 2
&UpdateStatusTicketByIdCommandValidator 7
:8 9
AbstractValidator: K
<K L)
UpdateStatusTicketByIdCommandL i
>i j
{ 
private 
enum 
Status 
{		 	
Open

 
,

 
Canceled

 
} 	
;	 

public 2
&UpdateStatusTicketByIdCommandValidator 5
(5 6
)6 7
{ 	
const 
string 
idRegex  
=! "
$str# 3
;3 4
RuleFor 
( 
ticket 
=> 
ticket $
.$ %
Id% '
)' (
. 
Cascade 
( 
CascadeMode $
.$ %
Stop% )
)) *
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
ValidationErrors( 8
.8 9
EmptyId9 @
)@ A
. 
Length 
( 
$num 
) 
. 
WithMessage '
(' (
ValidationErrors( 8
.8 9
InvalidIdLength9 H
)H I
. 
Matches 
( 
idRegex  
)  !
.! "
WithMessage" -
(- .
ValidationErrors. >
.> ?
InvalidIdStructure? Q
)Q R
;R S
RuleFor 
( 
ticket 
=> 
ticket $
.$ %
Status% +
)+ ,
. 
Cascade 
( 
CascadeMode (
.( )
Stop) -
)- .
. 

IsEnumName 
(  
typeof  &
(& '
Status' -
)- .
,. /
caseSensitive0 =
:= >
false? D
)D E
.E F
WithMessageF Q
(Q R
ValidationErrorsR b
.b c
InvalidStatusc p
)p q
;q r
} 	
} 
} ,
VC:\Fac\SysopSquadTickets\Tickets\WebApi\Validators\UpdateTicketByIdCommandValidator.cs
	namespace 	
WebApi
 
. 

Validators 
{ 
public 

class ,
 UpdateTicketByIdCommandValidator 1
:2 3
AbstractValidator4 E
<E F#
UpdateTicketByIdCommandF ]
>] ^
{ 
private 
enum 
Status 
{		 	
Open

 
,

 
Solved

 
,

 
Canceled

 "
} 	
;	 

private 
enum 
Priority 
{ 	
High 
, 
Medium 
, 
Low 
} 	
;	 

public ,
 UpdateTicketByIdCommandValidator /
(/ 0
)0 1
{ 	
const 
string 
idRegex  
=! "
$str# 3
;3 4
When 
( 
ticket 
=> 
! 
string "
." #
IsNullOrEmpty# 0
(0 1
ticket1 7
.7 8
UserId8 >
)> ?
,? @
(A B
)B C
=>D F
{ 
RuleFor 
( 
ticket 
=> !
ticket" (
.( )
UserId) /
)/ 0
. 
Cascade 
( 
CascadeMode (
.( )
Stop) -
)- .
. 
NotEmpty 
( 
) 
.  
WithMessage  +
(+ ,
ValidationErrors, <
.< =
EmptyUserId= H
)H I
. 
Length 
( 
$num 
) 
.  
WithMessage  +
(+ ,
ValidationErrors, <
.< =
InvalidIdLength= L
)L M
. 
Matches 
( 
idRegex $
)$ %
.% &
WithMessage& 1
(1 2
ValidationErrors2 B
.B C
InvalidIdStructureC U
)U V
;V W
} 
) 
; 
When 
( 
ticket 
=> 
! 
string "
." #
IsNullOrEmpty# 0
(0 1
ticket1 7
.7 8
ConsultantId8 D
)D E
,E F
(G H
)H I
=>J L
{   
RuleFor!! 
(!! 
ticket!! 
=>!! !
ticket!!" (
.!!( )
ConsultantId!!) 5
)!!5 6
."" 
Cascade"" 
("" 
CascadeMode"" (
.""( )
Stop"") -
)""- .
.## 
NotEmpty## 
(## 
)## 
.##  
WithMessage##  +
(##+ ,
ValidationErrors##, <
.##< =
EmptyConsultantId##= N
)##N O
.$$ 
Length$$ 
($$ 
$num$$ 
)$$ 
.$$  
WithMessage$$  +
($$+ ,
ValidationErrors$$, <
.$$< =
InvalidIdLength$$= L
)$$L M
.%% 
Matches%% 
(%% 
idRegex%% $
)%%$ %
.%%% &
WithMessage%%& 1
(%%1 2
ValidationErrors%%2 B
.%%B C
InvalidIdStructure%%C U
)%%U V
;%%V W
}&& 
)&& 
;&& 
When)) 
()) 
ticket)) 
=>)) 
!)) 
string)) "
.))" #
IsNullOrEmpty))# 0
())0 1
ticket))1 7
.))7 8
Status))8 >
)))> ?
,))? @
())A B
)))B C
=>))D F
{** 
RuleFor++ 
(++ 
ticket++ 
=>++ !
ticket++" (
.++( )
Status++) /
)++/ 0
.,, 
Cascade,, 
(,, 
CascadeMode,, (
.,,( )
Stop,,) -
),,- .
.-- 

IsEnumName-- 
(--  
typeof--  &
(--& '
Status--' -
)--- .
,--. /
caseSensitive--0 =
:--= >
false--? D
)--D E
.--E F
WithMessage--F Q
(--Q R
ValidationErrors--R b
.--b c
InvalidStatus--c p
)--p q
;--q r
}.. 
).. 
;.. 
When00 
(00 
ticket00 
=>00 
!00 
string00 "
.00" #
IsNullOrEmpty00# 0
(000 1
ticket001 7
.007 8
Priority008 @
)00@ A
,00A B
(00C D
)00D E
=>00F H
{11 
RuleFor22 
(22 
ticket22 
=>22 !
ticket22" (
.22( )
Priority22) 1
)221 2
.33 
Cascade33 
(33 
CascadeMode33 (
.33( )
Stop33) -
)33- .
.44 

IsEnumName44 
(44  
typeof44  &
(44& '
Priority44' /
)44/ 0
,440 1
caseSensitive442 ?
:44? @
false44A F
)44F G
.44G H
WithMessage44H S
(44S T
ValidationErrors44T d
.44d e
InvalidPriority44e t
)44t u
;44u v
}55 
)55 
;55 
}66 	
}77 
}88 